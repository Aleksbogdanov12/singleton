name: Singleton Server  

on:
  push:
    paths:
    - '.github/workflows/main.yml'
    - 'server/**'
  pull_request:
    paths: 
    - '.github/workflows/main.yml'
    - 'server/**'

defaults:
  run:
    working-directory: server  
    
jobs:
  pre-process:
    name: Pre-process
    uses: aleksbogdanov12/singleton-monorepo/.github/workflows/pre-process.yml@devops

  check-header:
    name: Check Header
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    uses: aleksbogdanov12/singleton-monorepo/.github/workflows/check.yml@devops


  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          sparse-checkout: server
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Unit test
        run: |
          cd $GITHUB_WORKSPACE/server/g11n-ws && ./gradlew test jacocoTestReport
      - name: Upload Codecov 
        uses: codecov/codecov-action@v3
        with:
          files: g11n-ws/vip-manager-l10n/build/reports/jacoco.xml, g11n-ws/vip-manager-lite-i18n/build/reports/jacoco.xml, g11n-ws/vip-manager-i18n/build/reports/jacoco.xml
          flags: g11n-ws
          name: g11n-ws
          verbose: true

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes' 
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes' 
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        sparse-checkout: server

    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@master
      with:
        verbose: true
        output: results.sarif
        format: sarif
        # Adjust severity of non-security issues
        gh-code-scanning-compat: true
        # Force 0 exit code to allow SARIF file generation
        # This will hand over control about PR rejection to the GitHub side
        max-allowed-issues: 2147483647
    # Upload the SARIF file generated in the previous step
    - name: Upload SARIF results file
      uses: github/codeql-action/upload-sarif@main
      with:
        sarif_file: results.sarif
            
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          sparse-checkout: server
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Smoke Test
        run: |
          git clone --branch=devops --depth=1 https://github.com/vmware/singleton.git devops
          cd $GITHUB_WORKSPACE/server/g11n-ws && ./gradlew build -x test
          ls -la 
          cp $GITHUB_WORKSPACE/server/devops/deploy/i18n-service/Dockerfile $GITHUB_WORKSPACE/server/publish/
          cd $GITHUB_WORKSPACE/server/publish && ls
          mv singleton-[0~9]*.jar i18n-service.jar && ls
          docker build -t singleton .
          docker run -d -p 8090:8090 --name singleton singleton
          docker ps
          cd $GITHUB_WORKSPACE/server/devops/autotest/service/i18n-service/APITest && $GITHUB_WORKSPACE/server/g11n-ws/gradlew build
          docker cp l10n singleton:/
          str=$(printf '=%.0s' {1..50})
          echo $str Smoke Test Start $str
          date
          locale
          java -cp "target/*:resource/*" org.testng.TestNG testng.xml
          echo $str Smoke Test End $str

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          sparse-checkout: server
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Set up Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Performance Test
        run: |
          git clone --branch=devops --depth=1 https://github.com/vmware/singleton.git devops
          cd $GITHUB_WORKSPACE/server/g11n-ws && ./gradlew build -x test
          cp $GITHUB_WORKSPACE/server/devops/performancetest/Dockerfile $GITHUB_WORKSPACE/server/publish/
          cd $GITHUB_WORKSPACE//server/publish && ls
          mv singleton-[0~9]*.jar i18n-service.jar && ls
          cp -r $GITHUB_WORKSPACE//server/devops/performancetest/resource/l10n l10n
          docker build -t singleton .
          docker run -d -p 8090:8090 --name singleton singleton
          docker ps
          str=$(printf '=%.0s' {1..50})
          cd $GITHUB_WORKSPACE/server/devops/performancetest
          pip install -r requirements.txt
          python performance.py