//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSharp.Resources {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CSharp.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about {
            get {
                object obj = ResourceManager.GetObject("about", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_de {
            get {
                object obj = ResourceManager.GetObject("about_de", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_fr {
            get {
                object obj = ResourceManager.GetObject("about_fr", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_ja {
            get {
                object obj = ResourceManager.GetObject("about_ja", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_my {
            get {
                object obj = ResourceManager.GetObject("about_my", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_zh_Hans {
            get {
                object obj = ResourceManager.GetObject("about_zh-Hans", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] about_zh_Hant {
            get {
                object obj = ResourceManager.GetObject("about_zh-Hant", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] contact {
            get {
                object obj = ResourceManager.GetObject("contact", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] contact_fr {
            get {
                object obj = ResourceManager.GetObject("contact_fr", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] contact_zh_Hant {
            get {
                object obj = ResourceManager.GetObject("contact_zh-Hant", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ResourceNewResx {
            get {
                return ResourceManager.GetString("ResourceNewResx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ResourceResx {
            get {
                return ResourceManager.GetString("ResourceResx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ResourceResx_de {
            get {
                return ResourceManager.GetString("ResourceResx_de", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX {
            get {
                return ResourceManager.GetString("RESX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_de {
            get {
                return ResourceManager.GetString("RESX_de", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_de1 {
            get {
                return ResourceManager.GetString("RESX_de1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_fr {
            get {
                return ResourceManager.GetString("RESX_fr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_ja {
            get {
                return ResourceManager.GetString("RESX_ja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_ko {
            get {
                return ResourceManager.GetString("RESX_ko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_my {
            get {
                return ResourceManager.GetString("RESX_my", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_ru {
            get {
                return ResourceManager.GetString("RESX_ru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_zh_hans {
            get {
                return ResourceManager.GetString("RESX_zh_hans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string RESX_zh_hans1 {
            get {
                return ResourceManager.GetString("RESX_zh_hans1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_disk {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_disk", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_disk_cache {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_disk_cache", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_disk_startup {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_disk_startup", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_external {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_external", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_internal_native {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_internal_native", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_internal_properties {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_internal_properties", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_offline_Internal_Resx {
            get {
                object obj = ResourceManager.GetObject("sgtn_offline_Internal_Resx", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_online_only {
            get {
                object obj = ResourceManager.GetObject("sgtn_online_only", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_online_with_external {
            get {
                object obj = ResourceManager.GetObject("sgtn_online_with_external", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sgtn_online_with_internal {
            get {
                object obj = ResourceManager.GetObject("sgtn_online_with_internal", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonAllFalse {
            get {
                object obj = ResourceManager.GetObject("SingletonAllFalse", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonAllTrue {
            get {
                object obj = ResourceManager.GetObject("SingletonAllTrue", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonCollectTrue {
            get {
                object obj = ResourceManager.GetObject("SingletonCollectTrue", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonFallbackPreVer {
            get {
                object obj = ResourceManager.GetObject("SingletonFallbackPreVer", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonForCache {
            get {
                object obj = ResourceManager.GetObject("SingletonForCache", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonForonlinecacheExpired {
            get {
                object obj = ResourceManager.GetObject("SingletonForonlinecacheExpired", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] SingletonPseudoTrue {
            get {
                object obj = ResourceManager.GetObject("SingletonPseudoTrue", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
